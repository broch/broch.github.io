<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Haskell on broch.tech</title><link>https://broch.tech/tags/haskell/</link><description>Recent content in Haskell on broch.tech</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 02 May 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://broch.tech/tags/haskell/index.xml" rel="self" type="application/rss+xml"/><item><title>OAuth2 and OpenID Connect in Haskell</title><link>https://broch.tech/posts/oauth2-openid-connect-haskell/</link><pubDate>Mon, 02 May 2016 00:00:00 +0000</pubDate><guid>https://broch.tech/posts/oauth2-openid-connect-haskell/</guid><description>I&amp;rsquo;ve been working for a while on an implementation of the OpenID Connect specification. Since it was something I already knew quite a bit about from my previous job, it seemed like a good idea for a &amp;ldquo;real-world&amp;rdquo; Haskell project. The result is a project called &amp;ldquo;Broch&amp;rdquo; 1, which is an OpenID Connect identity provider. Features include
OAuth2 flows Authorization endpoint Token endpoint OpenID Connect basic flows OpenID Connect hybrid flows OpenID Connect Discovery Support for signed and encrypted JWTs 2 Client Registration Client authentication Basic authentication with client secret JWT Bearer authentication ID Tokens (signed and/or encrypted) Pairwise subject identifiers Server key management and rotation 3 SQLite back end PostgreSQL 9.</description></item><item><title>Build Your Own Haskell Web Framework on WAI</title><link>https://broch.tech/posts/build-your-own-wai-framework/</link><pubDate>Sun, 19 Apr 2015 00:00:00 +0000</pubDate><guid>https://broch.tech/posts/build-your-own-wai-framework/</guid><description>This article shows how you can build on top of the basic request/response handling functionality provided by WAI and the Warp server, to support some of the requirements you might have in a typical web application. The content is mostly gleaned from my research into the code of several WAI-based web frameworks to try to understand how they work. Building a web application was one of the things I tackled when I didn&amp;rsquo;t really know Haskell well enough, so hopefully this will be useful if you&amp;rsquo;re at a similar stage and would like to understand what&amp;rsquo;s going on in a bit more depth.</description></item></channel></rss>